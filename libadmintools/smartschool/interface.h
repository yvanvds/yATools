// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* interface.h
   Generated by wsdl2h 2.8.17r from https://sanctamaria-aarschot.smartschool.be/Webservices/V3?wsdl and typemap.dat
   2017-04-29 06:17:48 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on interface.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   https://sanctamaria-aarschot.smartschool.be/Webservices/V3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"

// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3"

*/

#define SOAP_NAMESPACE_OF_ns1	"https://sanctamaria-aarschot.smartschool.be/Webservices/V3"
//gsoap ns1   schema namespace:	https://sanctamaria-aarschot.smartschool.be/Webservices/V3
//gsoap ns1   schema form:	unqualified

/*
Warning -d option used: -p option disabled and xsd:anyType base class removed.
Use run-time SOAP_DOM_NODE flag to deserialize class instances into DOM nodes.
A DOM node is represented by the xsd__anyType object implemented in dom.cpp.
*/


/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   https://sanctamaria-aarschot.smartschool.be/Webservices/V3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   https://sanctamaria-aarschot.smartschool.be/Webservices/V3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   https://sanctamaria-aarschot.smartschool.be/Webservices/V3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   https://sanctamaria-aarschot.smartschool.be/Webservices/V3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	V3Binding 
//gsoap ns1  service type:	V3Port 
//gsoap ns1  service port:	https://sanctamaria-aarschot.smartschool.be/Webservices/V3 
//gsoap ns1  service namespace:	https://sanctamaria-aarschot.smartschool.be/Webservices/V3 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage \Smsc\Legacy\Webservices\Models\V3 Definitions

@section _x005cSmsc_x005cLegacy_x005cWebservices_x005cModels_x005cV3_bindings Service Bindings

  - @ref V3Binding

@section _x005cSmsc_x005cLegacy_x005cWebservices_x005cModels_x005cV3_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page V3Binding Binding "V3Binding"

@section V3Binding_operations Operations of Binding  "V3Binding"

  - @ref ns1__saveUser

  - @ref ns1__saveClass

  - @ref ns1__saveGroup

  - @ref ns1__getAllAccounts

  - @ref ns1__getAllAccountsExtended

  - @ref ns1__getAllGroupsAndClasses

  - @ref ns1__addCourse

  - @ref ns1__addCourseTeacher

  - @ref ns1__addCourseStudents

  - @ref ns1__getCourses

  - @ref ns1__delUser

  - @ref ns1__saveUserParameter

  - @ref ns1__getClassList

  - @ref ns1__getClassListJson

  - @ref ns1__saveClassList

  - @ref ns1__saveClassListJson

  - @ref ns1__delClass

  - @ref ns1__saveUserToClasses

  - @ref ns1__removeUserFromGroup

  - @ref ns1__saveUserToClass

  - @ref ns1__saveUserToClassesAndGroups

  - @ref ns1__setAccountStatus

  - @ref ns1__setAccountPhoto

  - @ref ns1__getAccountPhoto

  - @ref ns1__replaceInum

  - @ref ns1__forcePasswordReset

  - @ref ns1__savePassword

  - @ref ns1__sendMsg

  - @ref ns1__getSkoreClassTeacherCourseRelation

  - @ref ns1__unregisterStudent

  - @ref ns1__getClassTeachers

  - @ref ns1__getAbsentsByDate

  - @ref ns1__getAbsents

  - @ref ns1__getUserDetails

  - @ref ns1__getUserDetailsByNumber

  - @ref ns1__getUserDetailsByUsername

  - @ref ns1__getUserOfficialClass

  - @ref ns1__saveSignature

  - @ref ns1__getStudentCareer

  - @ref ns1__deactivateTwoFactorAuthentication

  - @ref ns1__returnErrorCodes

  - @ref ns1__returnCsvErrorCodes

  - @ref ns1__returnJsonErrorCodes

@section V3Binding_ports Endpoints of Binding  "V3Binding"

  - https://sanctamaria-aarschot.smartschool.be/Webservices/V3

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   V3Binding                                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveUser                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveUser" of service binding "V3Binding"

/**

Operation details:
Voeg een nieuwe gebruiker toe, of wijzig een bestaande gebruiker
<code>
$result = $client->saveUser('webserviceswachtwoord','98754284','jmorren','kxes9875','','','jonas','morren','','','m','01-12-1998','Genk','Belgi','Kapelstraat
61','3600','Genk','Belgi','jonas.morren@gmail.com','0492123456','','','98.12.01-102-14','','leerling','695421');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUser"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUser"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         internnumber,
    std::string                         username,
    std::string                         passwd1,
    std::string                         passwd2,
    std::string                         passwd3,
    std::string                         name,
    std::string                         surname,
    std::string                         extranames,
    std::string                         initials,
    std::string                         sex,
    std::string                         birthday,
    std::string                         birthplace,
    std::string                         birthcountry,
    std::string                         address,
    std::string                         postalcode,
    std::string                         location,
    std::string                         country,
    std::string                         email,
    std::string                         mobilephone,
    std::string                         homephone,
    std::string                         fax,
    std::string                         prn,
    std::string                         stamboeknummer,
    std::string                         basisrol,
    std::string                         untis,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveUser(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         internnumber,
    std::string                         username,
    std::string                         passwd1,
    std::string                         passwd2,
    std::string                         passwd3,
    std::string                         name,
    std::string                         surname,
    std::string                         extranames,
    std::string                         initials,
    std::string                         sex,
    std::string                         birthday,
    std::string                         birthplace,
    std::string                         birthcountry,
    std::string                         address,
    std::string                         postalcode,
    std::string                         location,
    std::string                         country,
    std::string                         email,
    std::string                         mobilephone,
    std::string                         homephone,
    std::string                         fax,
    std::string                         prn,
    std::string                         stamboeknummer,
    std::string                         basisrol,
    std::string                         untis,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveUser SOAP
//gsoap ns1  service method-style:	saveUser rpc
//gsoap ns1  service method-encoding:	saveUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveUser https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUser
//gsoap ns1  service method-output-action:	saveUser https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserResponse
int ns1__saveUser(
    std::string                         accesscode,	///< Input parameter
    std::string                         internnumber,	///< Input parameter
    std::string                         username,	///< Input parameter
    std::string                         passwd1,	///< Input parameter
    std::string                         passwd2,	///< Input parameter
    std::string                         passwd3,	///< Input parameter
    std::string                         name,	///< Input parameter
    std::string                         surname,	///< Input parameter
    std::string                         extranames,	///< Input parameter
    std::string                         initials,	///< Input parameter
    std::string                         sex,	///< Input parameter
    std::string                         birthday,	///< Input parameter
    std::string                         birthplace,	///< Input parameter
    std::string                         birthcountry,	///< Input parameter
    std::string                         address,	///< Input parameter
    std::string                         postalcode,	///< Input parameter
    std::string                         location,	///< Input parameter
    std::string                         country,	///< Input parameter
    std::string                         email,	///< Input parameter
    std::string                         mobilephone,	///< Input parameter
    std::string                         homephone,	///< Input parameter
    std::string                         fax,	///< Input parameter
    std::string                         prn,	///< Input parameter
    std::string                         stamboeknummer,	///< Input parameter
    std::string                         basisrol,	///< Input parameter
    std::string                         untis,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveClass                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveClass" of service binding "V3Binding"

/**

Operation details:
Voeg een klas toe of wijzig een bestaande klas
<code>
$result = $client->saveClass('webserviceswachtwoord','6AB2','6AB2 is een opsplitsing
van 6AB','6AB2','6AB','6AB2','098877','20644');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClass"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClass"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveClass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         name,
    std::string                         desc,
    std::string                         code,
    std::string                         parent,
    std::string                         untis,
    std::string                         instituteNumber,
    std::string                         adminNumber,
    std::string                         schoolYearDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveClass(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         name,
    std::string                         desc,
    std::string                         code,
    std::string                         parent,
    std::string                         untis,
    std::string                         instituteNumber,
    std::string                         adminNumber,
    std::string                         schoolYearDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveClass SOAP
//gsoap ns1  service method-style:	saveClass rpc
//gsoap ns1  service method-encoding:	saveClass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClass
//gsoap ns1  service method-output-action:	saveClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassResponse
int ns1__saveClass(
    std::string                         accesscode,	///< Input parameter
    std::string                         name,	///< Input parameter
    std::string                         desc,	///< Input parameter
    std::string                         code,	///< Input parameter
    std::string                         parent,	///< Input parameter
    std::string                         untis,	///< Input parameter
    std::string                         instituteNumber,	///< Input parameter
    std::string                         adminNumber,	///< Input parameter
    std::string                         schoolYearDate,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveGroup                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveGroup" of service binding "V3Binding"

/**

Operation details:
Voeg een groep toe of wijzig een bestaande groep
<code>
$result = $client->saveGroup('webserviceswachtwoord','6AB2','6AB2 is een opsplitsing
van 6AB','6AB2','6AB','6AB2');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveGroup"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveGroup"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         name,
    std::string                         desc,
    std::string                         code,
    std::string                         parent,
    std::string                         untis,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveGroup(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         name,
    std::string                         desc,
    std::string                         code,
    std::string                         parent,
    std::string                         untis,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveGroup SOAP
//gsoap ns1  service method-style:	saveGroup rpc
//gsoap ns1  service method-encoding:	saveGroup http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveGroup https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveGroup
//gsoap ns1  service method-output-action:	saveGroup https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveGroupResponse
int ns1__saveGroup(
    std::string                         accesscode,	///< Input parameter
    std::string                         name,	///< Input parameter
    std::string                         desc,	///< Input parameter
    std::string                         code,	///< Input parameter
    std::string                         parent,	///< Input parameter
    std::string                         untis,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAllAccounts                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAllAccounts" of service binding "V3Binding"

/**

Operation details:
Voornaam, naam, gebruikersnaam en internnummer ophalen van gebruikers in een bepaalde
groep
<code>
$result = $client->getAllAccounts('webserviceswachtwoord','Beheerders','0');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccounts"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccounts"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAllAccounts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    std::string                         recursive,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAllAccounts(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    std::string                         recursive,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAllAccounts SOAP
//gsoap ns1  service method-style:	getAllAccounts rpc
//gsoap ns1  service method-encoding:	getAllAccounts http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAllAccounts https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccounts
//gsoap ns1  service method-output-action:	getAllAccounts https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsResponse
int ns1__getAllAccounts(
    std::string                         accesscode,	///< Input parameter
    std::string                         code,	///< Input parameter
    std::string                         recursive,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAllAccountsExtended                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAllAccountsExtended" of service binding "V3Binding"

/**

Operation details:
Alle gegevens ophalen van de gebruikers in een bepaalde groep (recursief indien
gewenst)

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtended"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtended"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtendedResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAllAccountsExtended(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    std::string                         recursive,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAllAccountsExtended(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    std::string                         recursive,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAllAccountsExtended SOAP
//gsoap ns1  service method-style:	getAllAccountsExtended rpc
//gsoap ns1  service method-encoding:	getAllAccountsExtended http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAllAccountsExtended https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtended
//gsoap ns1  service method-output-action:	getAllAccountsExtended https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtendedResponse
int ns1__getAllAccountsExtended(
    std::string                         accesscode,	///< Input parameter
    std::string                         code,	///< Input parameter
    std::string                         recursive,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAllGroupsAndClasses                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAllGroupsAndClasses" of service binding "V3Binding"

/**

Operation details:
Vraag al de groepen en klassen van het smartschool platform op
<code>
$result = $client->getAllGroupsAndClasses('webserviceswachtwoord');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClasses"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClasses"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClassesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAllGroupsAndClasses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAllGroupsAndClasses(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAllGroupsAndClasses SOAP
//gsoap ns1  service method-style:	getAllGroupsAndClasses rpc
//gsoap ns1  service method-encoding:	getAllGroupsAndClasses http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAllGroupsAndClasses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClasses
//gsoap ns1  service method-output-action:	getAllGroupsAndClasses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClassesResponse
int ns1__getAllGroupsAndClasses(
    std::string                         accesscode,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__addCourse                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__addCourse" of service binding "V3Binding"

/**

Operation details:
Voeg een vak toe
<code>
$result = $client->addCourse('webserviceswachtwoord', 'Geschiedenis 6A1', 'Geschiedenis
6dejaars A1');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourse"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourse"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__addCourse(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__addCourse(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addCourse SOAP
//gsoap ns1  service method-style:	addCourse rpc
//gsoap ns1  service method-encoding:	addCourse http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	addCourse https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourse
//gsoap ns1  service method-output-action:	addCourse https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseResponse
int ns1__addCourse(
    std::string                         accesscode,	///< Input parameter
    std::string                         coursename,	///< Input parameter
    std::string                         coursedesc,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__addCourseTeacher                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__addCourseTeacher" of service binding "V3Binding"

/**

Operation details:
Voeg een vakleerkracht en co-leerkrachten toe aan een bepaald vak
<code>
$result = $client->addCourseTeacher('webserviceswachtwoord','Geschiedenis 6A1','Geschiedenis
6dejaars A1','ppeters','jmorren,gvanven');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacher"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacher"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacherResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__addCourseTeacher(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    std::string                         internnummer,
    std::string                         userlist,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__addCourseTeacher(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    std::string                         internnummer,
    std::string                         userlist,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addCourseTeacher SOAP
//gsoap ns1  service method-style:	addCourseTeacher rpc
//gsoap ns1  service method-encoding:	addCourseTeacher http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	addCourseTeacher https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacher
//gsoap ns1  service method-output-action:	addCourseTeacher https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacherResponse
int ns1__addCourseTeacher(
    std::string                         accesscode,	///< Input parameter
    std::string                         coursename,	///< Input parameter
    std::string                         coursedesc,	///< Input parameter
    std::string                         internnummer,	///< Input parameter
    std::string                         userlist,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__addCourseStudents                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__addCourseStudents" of service binding "V3Binding"

/**

Operation details:
Voeg bepaalde klassen toe aan een bepaald vak
<code>
$result = $client->addCourseStudents('webserviceswachtwoord','Geschiedenis 6A1','Geschiedenis
6dejaars A1','6A1,6A2');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudents"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudents"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudentsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__addCourseStudents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    std::string                         groupIds,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__addCourseStudents(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         coursename,
    std::string                         coursedesc,
    std::string                         groupIds,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addCourseStudents SOAP
//gsoap ns1  service method-style:	addCourseStudents rpc
//gsoap ns1  service method-encoding:	addCourseStudents http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	addCourseStudents https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudents
//gsoap ns1  service method-output-action:	addCourseStudents https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudentsResponse
int ns1__addCourseStudents(
    std::string                         accesscode,	///< Input parameter
    std::string                         coursename,	///< Input parameter
    std::string                         coursedesc,	///< Input parameter
    std::string                         groupIds,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getCourses                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getCourses" of service binding "V3Binding"

/**

Operation details:
Vraag alle vakken van het platform op
<code>
$result = $client->getCourses('webserviceswachtwoord');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCourses"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCourses"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCoursesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getCourses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getCourses(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getCourses SOAP
//gsoap ns1  service method-style:	getCourses rpc
//gsoap ns1  service method-encoding:	getCourses http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getCourses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCourses
//gsoap ns1  service method-output-action:	getCourses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCoursesResponse
int ns1__getCourses(
    std::string                         accesscode,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__delUser                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__delUser" of service binding "V3Binding"

/**

Operation details:
Verwijder een specifieke gebruiker
<code>
$result = $client->delUser('webserviceswachtwoord','jmorren', '2012-08-31');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUser"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUser"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__delUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__delUser(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	delUser SOAP
//gsoap ns1  service method-style:	delUser rpc
//gsoap ns1  service method-encoding:	delUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	delUser https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUser
//gsoap ns1  service method-output-action:	delUser https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUserResponse
int ns1__delUser(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         officialDate,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveUserParameter                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveUserParameter" of service binding "V3Binding"

/**

Operation details:
Bewaar een bepaalde parameter voor een bepaalde gebruiker
<code>
$result = $client->saveUserParameter('webserviceswachtwoord','ppeters','Code schoolpasje','56987');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameter"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameter"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveUserParameter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         paramName,
    std::string                         paramValue,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveUserParameter(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         paramName,
    std::string                         paramValue,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveUserParameter SOAP
//gsoap ns1  service method-style:	saveUserParameter rpc
//gsoap ns1  service method-encoding:	saveUserParameter http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveUserParameter https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameter
//gsoap ns1  service method-output-action:	saveUserParameter https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameterResponse
int ns1__saveUserParameter(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         paramName,	///< Input parameter
    std::string                         paramValue,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getClassList                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getClassList" of service binding "V3Binding"

/**

Operation details:
Vraag een lijst met alle klassen op
<code>
$result = $client->getClassList('webserviceswachtwoord');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassList"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassList"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getClassList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    xsd__anyType                        accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getClassList(
    struct soap *soap,
    // input parameters:
    xsd__anyType                        accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getClassList SOAP
//gsoap ns1  service method-style:	getClassList rpc
//gsoap ns1  service method-encoding:	getClassList http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getClassList https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassList
//gsoap ns1  service method-output-action:	getClassList https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListResponse
int ns1__getClassList(
    xsd__anyType                        accesscode,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getClassListJson                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getClassListJson" of service binding "V3Binding"

/**

Operation details:
Vraag een lijst met alle klassen op
<code>
$result = $client->getClassList('webserviceswachtwoord');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListJson"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListJson"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListJsonResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getClassListJson(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    xsd__anyType                        accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getClassListJson(
    struct soap *soap,
    // input parameters:
    xsd__anyType                        accesscode,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getClassListJson SOAP
//gsoap ns1  service method-style:	getClassListJson rpc
//gsoap ns1  service method-encoding:	getClassListJson http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getClassListJson https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListJson
//gsoap ns1  service method-output-action:	getClassListJson https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassListJsonResponse
int ns1__getClassListJson(
    xsd__anyType                        accesscode,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveClassList                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveClassList" of service binding "V3Binding"

/**

Operation details:
Update een lijst van klassen
<code>
$serializedArray = serialize(
                           array(
                               array('id' => '964','name' => '1Ab','desc' => '1Ab',
'code' => '1Ab'),
                               array('id' => '965','name' => '2Ab','desc' => '2Ab',
'code' => '21Ab')
                           )
                       );
$result = $client->saveClassList('webserviceswachtwoord',$serializedArray);
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassList"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassList"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveClassList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         serializedList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveClassList(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         serializedList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveClassList SOAP
//gsoap ns1  service method-style:	saveClassList rpc
//gsoap ns1  service method-encoding:	saveClassList http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveClassList https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassList
//gsoap ns1  service method-output-action:	saveClassList https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListResponse
int ns1__saveClassList(
    std::string                         accesscode,	///< Input parameter
    std::string                         serializedList,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveClassListJson                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveClassListJson" of service binding "V3Binding"

/**

Operation details:
Update een lijst van klassen
<code>
$jsonList = json_encode(
						array(
							array('id' => '964','name'
=> '1Ab','desc' => '1Ab', 'code' => '1Ab'),
							array('id' => '965','name'
=> '2Ab','desc' => '2Ab', 'code' => '21Ab')
						)
					);
$result = $client->saveClassList('webserviceswachtwoord',$jsonList);
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListJson"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListJson"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListJsonResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveClassListJson(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         jsonList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveClassListJson(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         jsonList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveClassListJson SOAP
//gsoap ns1  service method-style:	saveClassListJson rpc
//gsoap ns1  service method-encoding:	saveClassListJson http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveClassListJson https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListJson
//gsoap ns1  service method-output-action:	saveClassListJson https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassListJsonResponse
int ns1__saveClassListJson(
    std::string                         accesscode,	///< Input parameter
    std::string                         jsonList,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__delClass                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__delClass" of service binding "V3Binding"

/**

Operation details:
Verwijder een bepaalde klas of groep
<code>
$result = $client->delClass('webserviceswachtwoord','6Ab');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClass"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClass"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClassResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__delClass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__delClass(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         code,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	delClass SOAP
//gsoap ns1  service method-style:	delClass rpc
//gsoap ns1  service method-encoding:	delClass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	delClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClass
//gsoap ns1  service method-output-action:	delClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClassResponse
int ns1__delClass(
    std::string                         accesscode,	///< Input parameter
    std::string                         code,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveUserToClasses                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveUserToClasses" of service binding "V3Binding"

/**

Operation details:
Bepaal de groep en klas lidmaatschap van een bepaalde gebruiker
<code>
$result = $client->saveUserToClasses('webserviceswachtwoord','jmorren','1Ab,leerlingen');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClasses"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClasses"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveUserToClasses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         csvList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveUserToClasses(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         csvList,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveUserToClasses SOAP
//gsoap ns1  service method-style:	saveUserToClasses rpc
//gsoap ns1  service method-encoding:	saveUserToClasses http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveUserToClasses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClasses
//gsoap ns1  service method-output-action:	saveUserToClasses https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesResponse
int ns1__saveUserToClasses(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         csvList,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__removeUserFromGroup                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__removeUserFromGroup" of service binding "V3Binding"

/**

Operation details:
Verwijder de gebruiker uit 1 specificieke groep of klas
<code>
$result = $client->removeUserFromGroup('webserviceswachtwoord','jmorren','1Ab');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#removeUserFromGroup"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#removeUserFromGroup"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#removeUserFromGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__removeUserFromGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         class_,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__removeUserFromGroup(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         class_,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removeUserFromGroup SOAP
//gsoap ns1  service method-style:	removeUserFromGroup rpc
//gsoap ns1  service method-encoding:	removeUserFromGroup http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	removeUserFromGroup https://sanctamaria-aarschot.smartschool.be/Webservices/V3#removeUserFromGroup
//gsoap ns1  service method-output-action:	removeUserFromGroup https://sanctamaria-aarschot.smartschool.be/Webservices/V3#removeUserFromGroupResponse
int ns1__removeUserFromGroup(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         class_,	///< Input parameter
    std::string                         officialDate,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveUserToClass                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveUserToClass" of service binding "V3Binding"

/**

Operation details:
Verplaats de gebruiker naar 1 specificieke groep of klas
<code>
$result = $client->saveUserToClass('webserviceswachtwoord','jmorren','1Ab');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClass"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClass"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveUserToClass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         class_,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveUserToClass(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         class_,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveUserToClass SOAP
//gsoap ns1  service method-style:	saveUserToClass rpc
//gsoap ns1  service method-encoding:	saveUserToClass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveUserToClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClass
//gsoap ns1  service method-output-action:	saveUserToClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassResponse
int ns1__saveUserToClass(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         class_,	///< Input parameter
    std::string                         officialDate,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveUserToClassesAndGroups                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveUserToClassesAndGroups" of service binding "V3Binding"

/**

Operation details:
Bepaal de groep en klas lidmaatschap van een bepaalde gebruiker
<code>
$result = $client->saveUserToClassesAndGroup('webserviceswachtwoord','jmorren','1Ab,leerlingen');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroups"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroups"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroupsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveUserToClassesAndGroups(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         csvList,
    int                                 keepOld,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveUserToClassesAndGroups(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         csvList,
    int                                 keepOld,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveUserToClassesAndGroups SOAP
//gsoap ns1  service method-style:	saveUserToClassesAndGroups rpc
//gsoap ns1  service method-encoding:	saveUserToClassesAndGroups http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveUserToClassesAndGroups https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroups
//gsoap ns1  service method-output-action:	saveUserToClassesAndGroups https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroupsResponse
int ns1__saveUserToClassesAndGroups(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         csvList,	///< Input parameter
    int                                 keepOld,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__setAccountStatus                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__setAccountStatus" of service binding "V3Binding"

/**

Operation details:
Stel de status van een bepaalde accountin
<code>
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'enabled');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'actief');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'active');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'disabled');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'inactief');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'inactive');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'administrative');
$result = $client->setAccountStatus('webserviceswachtwoord', 'admin', 'administratief');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatus"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatus"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__setAccountStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    xsd__anyType                        accountStatus,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__setAccountStatus(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    xsd__anyType                        accountStatus,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	setAccountStatus SOAP
//gsoap ns1  service method-style:	setAccountStatus rpc
//gsoap ns1  service method-encoding:	setAccountStatus http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	setAccountStatus https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatus
//gsoap ns1  service method-output-action:	setAccountStatus https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatusResponse
int ns1__setAccountStatus(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    xsd__anyType                        accountStatus,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__setAccountPhoto                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__setAccountPhoto" of service binding "V3Binding"

/**

Operation details:
Stel de foto in voor een bepaalde account
<code>
$result = $client->setAccountPhoto('webserviceswachtwoord','admin',$base64encodedImageData);
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhoto"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhoto"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhotoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__setAccountPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         photo,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__setAccountPhoto(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         photo,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	setAccountPhoto SOAP
//gsoap ns1  service method-style:	setAccountPhoto rpc
//gsoap ns1  service method-encoding:	setAccountPhoto http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	setAccountPhoto https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhoto
//gsoap ns1  service method-output-action:	setAccountPhoto https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhotoResponse
int ns1__setAccountPhoto(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         photo,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAccountPhoto                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAccountPhoto" of service binding "V3Binding"

/**

Operation details:
Vraag de foto op van een bepaalde account
<code>
$result = $client->getAccountPhoto('webserviceswachtwoord','admin');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAccountPhoto"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAccountPhoto"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAccountPhotoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAccountPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAccountPhoto(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAccountPhoto SOAP
//gsoap ns1  service method-style:	getAccountPhoto rpc
//gsoap ns1  service method-encoding:	getAccountPhoto http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAccountPhoto https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAccountPhoto
//gsoap ns1  service method-output-action:	getAccountPhoto https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAccountPhotoResponse
int ns1__getAccountPhoto(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__replaceInum                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__replaceInum" of service binding "V3Binding"

/**

Operation details:
Vervang de interne nummer van een bepaalde gebruiker
<code>
$result = $client->replaceInum('webserviceswachtwoord','09874','09875');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInum"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInum"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInumResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__replaceInum(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         oldInum,
    std::string                         newInum,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__replaceInum(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         oldInum,
    std::string                         newInum,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	replaceInum SOAP
//gsoap ns1  service method-style:	replaceInum rpc
//gsoap ns1  service method-encoding:	replaceInum http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	replaceInum https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInum
//gsoap ns1  service method-output-action:	replaceInum https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInumResponse
int ns1__replaceInum(
    std::string                         accesscode,	///< Input parameter
    std::string                         oldInum,	///< Input parameter
    std::string                         newInum,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__forcePasswordReset                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__forcePasswordReset" of service binding "V3Binding"

/**

Operation details:
Forceer dat een bepaalde hoofd- of co-account zijn/haar wachtwoord moet wijzigen
bij de volgende aanmelding
<code>
$result = $client->forcePasswordReset('webserviceswachtwoord','admin','0');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#forcePasswordReset"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#forcePasswordReset"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#forcePasswordResetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__forcePasswordReset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__forcePasswordReset(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	forcePasswordReset SOAP
//gsoap ns1  service method-style:	forcePasswordReset rpc
//gsoap ns1  service method-encoding:	forcePasswordReset http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	forcePasswordReset https://sanctamaria-aarschot.smartschool.be/Webservices/V3#forcePasswordReset
//gsoap ns1  service method-output-action:	forcePasswordReset https://sanctamaria-aarschot.smartschool.be/Webservices/V3#forcePasswordResetResponse
int ns1__forcePasswordReset(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    int                                 accountType,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__savePassword                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__savePassword" of service binding "V3Binding"

/**

Operation details:
Stel het wachtwoord in voor een bepaalde hoofd- of co-account
<code>
$result = $client->savePassword('webserviceswachtwoord','admin','bdes5987','0');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePassword"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePassword"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePasswordResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__savePassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         password,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__savePassword(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         password,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	savePassword SOAP
//gsoap ns1  service method-style:	savePassword rpc
//gsoap ns1  service method-encoding:	savePassword http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	savePassword https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePassword
//gsoap ns1  service method-output-action:	savePassword https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePasswordResponse
int ns1__savePassword(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         password,	///< Input parameter
    int                                 accountType,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__sendMsg                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__sendMsg" of service binding "V3Binding"

/**

Operation details:
Stuur een bericht naar een bepaalde gebruiker
<code>
$result = $client->sendMsg('webserviceswachtwoord','admin','Dit is een test', '<p>Dit
is de body van het testbericht (html-formaat)</p>');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsg"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsg"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__sendMsg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         title,
    std::string                         body,
    std::string                         senderIdentifier,
    xsd__anyType                        attachments,
    int                                 coaccount,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__sendMsg(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         title,
    std::string                         body,
    std::string                         senderIdentifier,
    xsd__anyType                        attachments,
    int                                 coaccount,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	sendMsg SOAP
//gsoap ns1  service method-style:	sendMsg rpc
//gsoap ns1  service method-encoding:	sendMsg http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	sendMsg https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsg
//gsoap ns1  service method-output-action:	sendMsg https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsgResponse
int ns1__sendMsg(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         title,	///< Input parameter
    std::string                         body,	///< Input parameter
    std::string                         senderIdentifier,	///< Input parameter
    xsd__anyType                        attachments,	///< Input parameter
    int                                 coaccount,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getSkoreClassTeacherCourseRelation                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getSkoreClassTeacherCourseRelation" of service binding "V3Binding"

/**

Operation details:
Skore export. Geeft de koppeling tussen klassen, leerkrachten en vakken weer.

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelation"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelation"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getSkoreClassTeacherCourseRelation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getSkoreClassTeacherCourseRelation(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getSkoreClassTeacherCourseRelation SOAP
//gsoap ns1  service method-style:	getSkoreClassTeacherCourseRelation rpc
//gsoap ns1  service method-encoding:	getSkoreClassTeacherCourseRelation http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getSkoreClassTeacherCourseRelation https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelation
//gsoap ns1  service method-output-action:	getSkoreClassTeacherCourseRelation https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelationResponse
int ns1__getSkoreClassTeacherCourseRelation(
    std::string                         accesscode,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__unregisterStudent                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__unregisterStudent" of service binding "V3Binding"

/**

Operation details:
Leerling uitschrijven. De officiele datum kan optioneel meegeleverd worden.

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudent"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudent"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__unregisterStudent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__unregisterStudent(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         officialDate,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	unregisterStudent SOAP
//gsoap ns1  service method-style:	unregisterStudent rpc
//gsoap ns1  service method-encoding:	unregisterStudent http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	unregisterStudent https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudent
//gsoap ns1  service method-output-action:	unregisterStudent https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudentResponse
int ns1__unregisterStudent(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         officialDate,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getClassTeachers                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getClassTeachers" of service binding "V3Binding"

/**

Operation details:
Lijst van klastitularissen

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachers"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachers"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getClassTeachers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    bool                                getAllOwners,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getClassTeachers(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    bool                                getAllOwners,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getClassTeachers SOAP
//gsoap ns1  service method-style:	getClassTeachers rpc
//gsoap ns1  service method-encoding:	getClassTeachers http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getClassTeachers https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachers
//gsoap ns1  service method-output-action:	getClassTeachers https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachersResponse
int ns1__getClassTeachers(
    std::string                         accesscode,	///< Input parameter
    bool                                getAllOwners,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAbsentsByDate                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAbsentsByDate" of service binding "V3Binding"

/**

Operation details:
Return all absents for a specific date

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsByDate"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsByDate"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsByDateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAbsentsByDate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         date,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAbsentsByDate(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         date,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAbsentsByDate SOAP
//gsoap ns1  service method-style:	getAbsentsByDate rpc
//gsoap ns1  service method-encoding:	getAbsentsByDate http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAbsentsByDate https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsByDate
//gsoap ns1  service method-output-action:	getAbsentsByDate https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsByDateResponse
int ns1__getAbsentsByDate(
    std::string                         accesscode,	///< Input parameter
    std::string                         date,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getAbsents                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getAbsents" of service binding "V3Binding"

/**

Operation details:
Return all absents for a specific user for a specific schoolyear

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsents"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsents"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getAbsents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         schoolYear,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getAbsents(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         schoolYear,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAbsents SOAP
//gsoap ns1  service method-style:	getAbsents rpc
//gsoap ns1  service method-encoding:	getAbsents http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getAbsents https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsents
//gsoap ns1  service method-output-action:	getAbsents https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsentsResponse
int ns1__getAbsents(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         schoolYear,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getUserDetails                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getUserDetails" of service binding "V3Binding"

/**

Operation details:
Get the details of a specific user

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetails"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetails"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getUserDetails(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getUserDetails(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getUserDetails SOAP
//gsoap ns1  service method-style:	getUserDetails rpc
//gsoap ns1  service method-encoding:	getUserDetails http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getUserDetails https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetails
//gsoap ns1  service method-output-action:	getUserDetails https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsResponse
int ns1__getUserDetails(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getUserDetailsByNumber                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getUserDetailsByNumber" of service binding "V3Binding"

/**

Operation details:
Get the details of a specific user by number

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByNumber"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByNumber"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByNumberResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getUserDetailsByNumber(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         number,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getUserDetailsByNumber(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         number,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getUserDetailsByNumber SOAP
//gsoap ns1  service method-style:	getUserDetailsByNumber rpc
//gsoap ns1  service method-encoding:	getUserDetailsByNumber http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getUserDetailsByNumber https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByNumber
//gsoap ns1  service method-output-action:	getUserDetailsByNumber https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByNumberResponse
int ns1__getUserDetailsByNumber(
    std::string                         accesscode,	///< Input parameter
    std::string                         number,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getUserDetailsByUsername                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getUserDetailsByUsername" of service binding "V3Binding"

/**

Operation details:
Get the details of a specific user by username

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByUsername"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByUsername"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getUserDetailsByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         username,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getUserDetailsByUsername(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         username,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getUserDetailsByUsername SOAP
//gsoap ns1  service method-style:	getUserDetailsByUsername rpc
//gsoap ns1  service method-encoding:	getUserDetailsByUsername http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getUserDetailsByUsername https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByUsername
//gsoap ns1  service method-output-action:	getUserDetailsByUsername https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserDetailsByUsernameResponse
int ns1__getUserDetailsByUsername(
    std::string                         accesscode,	///< Input parameter
    std::string                         username,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getUserOfficialClass                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getUserOfficialClass" of service binding "V3Binding"

/**

Operation details:
Get official class of a user, optionally at a specific time (yyyy-mm-dd)

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserOfficialClass"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserOfficialClass"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserOfficialClassResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getUserOfficialClass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         date,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getUserOfficialClass(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    std::string                         date,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getUserOfficialClass SOAP
//gsoap ns1  service method-style:	getUserOfficialClass rpc
//gsoap ns1  service method-encoding:	getUserOfficialClass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getUserOfficialClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserOfficialClass
//gsoap ns1  service method-output-action:	getUserOfficialClass https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getUserOfficialClassResponse
int ns1__getUserOfficialClass(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                         date,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__saveSignature                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__saveSignature" of service binding "V3Binding"

/**

Operation details:
Save the signature of a specific user identifier with the userIdentifier

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveSignature"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveSignature"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveSignatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__saveSignature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    std::string                         signature,
    // output parameters:
    bool                               &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__saveSignature(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    std::string                         signature,
    // output parameters:
    bool                               &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	saveSignature SOAP
//gsoap ns1  service method-style:	saveSignature rpc
//gsoap ns1  service method-encoding:	saveSignature http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	saveSignature https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveSignature
//gsoap ns1  service method-output-action:	saveSignature https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveSignatureResponse
int ns1__saveSignature(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    int                                 accountType,	///< Input parameter
    std::string                         signature,	///< Input parameter
    bool                               &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__getStudentCareer                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getStudentCareer" of service binding "V3Binding"

/**

Operation details:
Geeft de volledige schoolloopbaan van de leerling terug in JSON-formaat

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getStudentCareer"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getStudentCareer"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getStudentCareerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getStudentCareer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getStudentCareer(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getStudentCareer SOAP
//gsoap ns1  service method-style:	getStudentCareer rpc
//gsoap ns1  service method-encoding:	getStudentCareer http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	getStudentCareer https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getStudentCareer
//gsoap ns1  service method-output-action:	getStudentCareer https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getStudentCareerResponse
int ns1__getStudentCareer(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__deactivateTwoFactorAuthentication                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__deactivateTwoFactorAuthentication" of service binding "V3Binding"

/**

Operation details:
Deactiveer two factor authenticatie voor een gebruiker
<code>
$result = $client->deactivateTwoFactorAuthentication('webserviceswachtwoord','admin','0');
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#deactivateTwoFactorAuthentication"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#deactivateTwoFactorAuthentication"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#deactivateTwoFactorAuthenticationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__deactivateTwoFactorAuthentication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__deactivateTwoFactorAuthentication(
    struct soap *soap,
    // input parameters:
    std::string                         accesscode,
    std::string                         userIdentifier,
    int                                 accountType,
    // output parameters:
    xsd__anyType                       &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	deactivateTwoFactorAuthentication SOAP
//gsoap ns1  service method-style:	deactivateTwoFactorAuthentication rpc
//gsoap ns1  service method-encoding:	deactivateTwoFactorAuthentication http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	deactivateTwoFactorAuthentication https://sanctamaria-aarschot.smartschool.be/Webservices/V3#deactivateTwoFactorAuthentication
//gsoap ns1  service method-output-action:	deactivateTwoFactorAuthentication https://sanctamaria-aarschot.smartschool.be/Webservices/V3#deactivateTwoFactorAuthenticationResponse
int ns1__deactivateTwoFactorAuthentication(
    std::string                         accesscode,	///< Input parameter
    std::string                         userIdentifier,	///< Input parameter
    int                                 accountType,	///< Input parameter
    xsd__anyType                       &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__returnErrorCodes                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__returnErrorCodes" of service binding "V3Binding"

/**

Operation details:
Get all the errorcode

  - One-way service request message

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnErrorCodes"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnErrorCodes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send_ns1__returnErrorCodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__returnErrorCodes(
    struct soap *soap,
    // input parameters:
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	returnErrorCodes SOAP
//gsoap ns1  service method-style:	returnErrorCodes rpc
//gsoap ns1  service method-encoding:	returnErrorCodes http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	returnErrorCodes https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnErrorCodes
int ns1__returnErrorCodes(
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__returnCsvErrorCodes                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__returnCsvErrorCodes" of service binding "V3Binding"

/**

Operation details:
Haal alle errorcodes in een csv lijst
<code>
$result = $client->returnCsvErrorCodes();
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodes"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodes"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__returnCsvErrorCodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__returnCsvErrorCodes(
    struct soap *soap,
    // input parameters:
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	returnCsvErrorCodes SOAP
//gsoap ns1  service method-style:	returnCsvErrorCodes rpc
//gsoap ns1  service method-encoding:	returnCsvErrorCodes http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	returnCsvErrorCodes https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodes
//gsoap ns1  service method-output-action:	returnCsvErrorCodes https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodesResponse
int ns1__returnCsvErrorCodes(
    std::string                        &return_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__returnJsonErrorCodes                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__returnJsonErrorCodes" of service binding "V3Binding"

/**

Operation details:
Haal alle errorcodes in json formaat
<code>
$result = $client->returnJsonErrorCodes();
</code>

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodes"

  - Addressing input action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodes"

  - Addressing output action: "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__returnJsonErrorCodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    // output parameters:
    std::string                        &return_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__returnJsonErrorCodes(
    struct soap *soap,
    // input parameters:
    // output parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapV3BindingProxy.h):
@code
  class V3BindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapV3BindingService.h):
@code
  class V3BindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	returnJsonErrorCodes SOAP
//gsoap ns1  service method-style:	returnJsonErrorCodes rpc
//gsoap ns1  service method-encoding:	returnJsonErrorCodes http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-input-action:	returnJsonErrorCodes https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodes
//gsoap ns1  service method-output-action:	returnJsonErrorCodes https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodesResponse
int ns1__returnJsonErrorCodes(
    std::string                        &return_	///< Output parameter
);

/**

@page V3Binding Binding "V3Binding"

@section V3Binding_policy_enablers Policy Enablers of Binding  "V3Binding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "https://sanctamaria-aarschot.smartschool.be/Webservices/V3"

*/

/* End of interface.h */
