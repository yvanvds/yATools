/* soapV3BindingProxy.cpp
   Generated by gSOAP 2.8.16 from interface.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapV3BindingProxy.h"

V3BindingProxy::V3BindingProxy()
{	V3BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

V3BindingProxy::V3BindingProxy(const struct soap &_soap) : soap(_soap)
{ }

V3BindingProxy::V3BindingProxy(const char *url)
{	V3BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

V3BindingProxy::V3BindingProxy(soap_mode iomode)
{	V3BindingProxy_init(iomode, iomode);
}

V3BindingProxy::V3BindingProxy(const char *url, soap_mode iomode)
{	V3BindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

V3BindingProxy::V3BindingProxy(soap_mode imode, soap_mode omode)
{	V3BindingProxy_init(imode, omode);
}

V3BindingProxy::~V3BindingProxy()
{ }

void V3BindingProxy::V3BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "https://sanctamaria-aarschot.smartschool.be/Webservices/V3", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void V3BindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void V3BindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	V3BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void V3BindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *V3BindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *V3BindingProxy::soap_fault()
{	return this->fault;
}

const char *V3BindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *V3BindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int V3BindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int V3BindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void V3BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void V3BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *V3BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int V3BindingProxy::saveUser(const char *endpoint, const char *soap_action, std::string accesscode, std::string internnumber, std::string username, std::string passwd1, std::string passwd2, std::string passwd3, std::string name, std::string surname, std::string extranames, std::string initials, std::string sex, std::string birthday, std::string birthplace, std::string birthcountry, std::string address, std::string postalcode, std::string location, std::string country, std::string email, std::string mobilephone, std::string homephone, std::string fax, std::string prn, std::string stamboeknummer, std::string basisrol, std::string untis, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveUser soap_tmp_ns1__saveUser;
	struct ns1__saveUserResponse *soap_tmp_ns1__saveUserResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUser";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveUser.accesscode = accesscode;
	soap_tmp_ns1__saveUser.internnumber = internnumber;
	soap_tmp_ns1__saveUser.username = username;
	soap_tmp_ns1__saveUser.passwd1 = passwd1;
	soap_tmp_ns1__saveUser.passwd2 = passwd2;
	soap_tmp_ns1__saveUser.passwd3 = passwd3;
	soap_tmp_ns1__saveUser.name = name;
	soap_tmp_ns1__saveUser.surname = surname;
	soap_tmp_ns1__saveUser.extranames = extranames;
	soap_tmp_ns1__saveUser.initials = initials;
	soap_tmp_ns1__saveUser.sex = sex;
	soap_tmp_ns1__saveUser.birthday = birthday;
	soap_tmp_ns1__saveUser.birthplace = birthplace;
	soap_tmp_ns1__saveUser.birthcountry = birthcountry;
	soap_tmp_ns1__saveUser.address = address;
	soap_tmp_ns1__saveUser.postalcode = postalcode;
	soap_tmp_ns1__saveUser.location = location;
	soap_tmp_ns1__saveUser.country = country;
	soap_tmp_ns1__saveUser.email = email;
	soap_tmp_ns1__saveUser.mobilephone = mobilephone;
	soap_tmp_ns1__saveUser.homephone = homephone;
	soap_tmp_ns1__saveUser.fax = fax;
	soap_tmp_ns1__saveUser.prn = prn;
	soap_tmp_ns1__saveUser.stamboeknummer = stamboeknummer;
	soap_tmp_ns1__saveUser.basisrol = basisrol;
	soap_tmp_ns1__saveUser.untis = untis;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveUser(soap, &soap_tmp_ns1__saveUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveUser(soap, &soap_tmp_ns1__saveUser, "ns1:saveUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveUser(soap, &soap_tmp_ns1__saveUser, "ns1:saveUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveUserResponse = soap_get_ns1__saveUserResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveUserResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveUserResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveClass(const char *endpoint, const char *soap_action, std::string accesscode, std::string name, std::string desc, std::string code, std::string parent, std::string untis, std::string instituteNumber, std::string adminNumber, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveClass soap_tmp_ns1__saveClass;
	struct ns1__saveClassResponse *soap_tmp_ns1__saveClassResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClass";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveClass.accesscode = accesscode;
	soap_tmp_ns1__saveClass.name = name;
	soap_tmp_ns1__saveClass.desc = desc;
	soap_tmp_ns1__saveClass.code = code;
	soap_tmp_ns1__saveClass.parent = parent;
	soap_tmp_ns1__saveClass.untis = untis;
	soap_tmp_ns1__saveClass.instituteNumber = instituteNumber;
	soap_tmp_ns1__saveClass.adminNumber = adminNumber;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveClass(soap, &soap_tmp_ns1__saveClass);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveClass(soap, &soap_tmp_ns1__saveClass, "ns1:saveClass", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveClass(soap, &soap_tmp_ns1__saveClass, "ns1:saveClass", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveClassResponse = soap_get_ns1__saveClassResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveClassResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveClassResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getAllAccounts(const char *endpoint, const char *soap_action, std::string accesscode, std::string code, std::string recursive, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__getAllAccounts soap_tmp_ns1__getAllAccounts;
	struct ns1__getAllAccountsResponse *soap_tmp_ns1__getAllAccountsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccounts";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getAllAccounts.accesscode = accesscode;
	soap_tmp_ns1__getAllAccounts.code = code;
	soap_tmp_ns1__getAllAccounts.recursive = recursive;
	soap_serializeheader(soap);
	soap_serialize_ns1__getAllAccounts(soap, &soap_tmp_ns1__getAllAccounts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getAllAccounts(soap, &soap_tmp_ns1__getAllAccounts, "ns1:getAllAccounts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getAllAccounts(soap, &soap_tmp_ns1__getAllAccounts, "ns1:getAllAccounts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getAllAccountsResponse = soap_get_ns1__getAllAccountsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getAllAccountsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getAllAccountsResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getAllAccountsExtended(const char *endpoint, const char *soap_action, std::string accesscode, std::string code, std::string recursive, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__getAllAccountsExtended soap_tmp_ns1__getAllAccountsExtended;
	struct ns1__getAllAccountsExtendedResponse *soap_tmp_ns1__getAllAccountsExtendedResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllAccountsExtended";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getAllAccountsExtended.accesscode = accesscode;
	soap_tmp_ns1__getAllAccountsExtended.code = code;
	soap_tmp_ns1__getAllAccountsExtended.recursive = recursive;
	soap_serializeheader(soap);
	soap_serialize_ns1__getAllAccountsExtended(soap, &soap_tmp_ns1__getAllAccountsExtended);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getAllAccountsExtended(soap, &soap_tmp_ns1__getAllAccountsExtended, "ns1:getAllAccountsExtended", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getAllAccountsExtended(soap, &soap_tmp_ns1__getAllAccountsExtended, "ns1:getAllAccountsExtended", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getAllAccountsExtendedResponse = soap_get_ns1__getAllAccountsExtendedResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getAllAccountsExtendedResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getAllAccountsExtendedResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getAllGroupsAndClasses(const char *endpoint, const char *soap_action, std::string accesscode, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__getAllGroupsAndClasses soap_tmp_ns1__getAllGroupsAndClasses;
	struct ns1__getAllGroupsAndClassesResponse *soap_tmp_ns1__getAllGroupsAndClassesResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAllGroupsAndClasses";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getAllGroupsAndClasses.accesscode = accesscode;
	soap_serializeheader(soap);
	soap_serialize_ns1__getAllGroupsAndClasses(soap, &soap_tmp_ns1__getAllGroupsAndClasses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getAllGroupsAndClasses(soap, &soap_tmp_ns1__getAllGroupsAndClasses, "ns1:getAllGroupsAndClasses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getAllGroupsAndClasses(soap, &soap_tmp_ns1__getAllGroupsAndClasses, "ns1:getAllGroupsAndClasses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getAllGroupsAndClassesResponse = soap_get_ns1__getAllGroupsAndClassesResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getAllGroupsAndClassesResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getAllGroupsAndClassesResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::addCourse(const char *endpoint, const char *soap_action, std::string accesscode, std::string coursename, std::string coursedesc, std::string &return_)
{	struct soap *soap = this;
	struct ns1__addCourse soap_tmp_ns1__addCourse;
	struct ns1__addCourseResponse *soap_tmp_ns1__addCourseResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourse";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__addCourse.accesscode = accesscode;
	soap_tmp_ns1__addCourse.coursename = coursename;
	soap_tmp_ns1__addCourse.coursedesc = coursedesc;
	soap_serializeheader(soap);
	soap_serialize_ns1__addCourse(soap, &soap_tmp_ns1__addCourse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__addCourse(soap, &soap_tmp_ns1__addCourse, "ns1:addCourse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__addCourse(soap, &soap_tmp_ns1__addCourse, "ns1:addCourse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__addCourseResponse = soap_get_ns1__addCourseResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__addCourseResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__addCourseResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::addCourseTeacher(const char *endpoint, const char *soap_action, std::string accesscode, std::string coursename, std::string coursedesc, std::string internnummer, std::string userlist, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__addCourseTeacher soap_tmp_ns1__addCourseTeacher;
	struct ns1__addCourseTeacherResponse *soap_tmp_ns1__addCourseTeacherResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseTeacher";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__addCourseTeacher.accesscode = accesscode;
	soap_tmp_ns1__addCourseTeacher.coursename = coursename;
	soap_tmp_ns1__addCourseTeacher.coursedesc = coursedesc;
	soap_tmp_ns1__addCourseTeacher.internnummer = internnummer;
	soap_tmp_ns1__addCourseTeacher.userlist = userlist;
	soap_serializeheader(soap);
	soap_serialize_ns1__addCourseTeacher(soap, &soap_tmp_ns1__addCourseTeacher);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__addCourseTeacher(soap, &soap_tmp_ns1__addCourseTeacher, "ns1:addCourseTeacher", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__addCourseTeacher(soap, &soap_tmp_ns1__addCourseTeacher, "ns1:addCourseTeacher", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__addCourseTeacherResponse = soap_get_ns1__addCourseTeacherResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__addCourseTeacherResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__addCourseTeacherResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::addCourseStudents(const char *endpoint, const char *soap_action, std::string accesscode, std::string coursename, std::string coursedesc, std::string groupIds, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__addCourseStudents soap_tmp_ns1__addCourseStudents;
	struct ns1__addCourseStudentsResponse *soap_tmp_ns1__addCourseStudentsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#addCourseStudents";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__addCourseStudents.accesscode = accesscode;
	soap_tmp_ns1__addCourseStudents.coursename = coursename;
	soap_tmp_ns1__addCourseStudents.coursedesc = coursedesc;
	soap_tmp_ns1__addCourseStudents.groupIds = groupIds;
	soap_serializeheader(soap);
	soap_serialize_ns1__addCourseStudents(soap, &soap_tmp_ns1__addCourseStudents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__addCourseStudents(soap, &soap_tmp_ns1__addCourseStudents, "ns1:addCourseStudents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__addCourseStudents(soap, &soap_tmp_ns1__addCourseStudents, "ns1:addCourseStudents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__addCourseStudentsResponse = soap_get_ns1__addCourseStudentsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__addCourseStudentsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__addCourseStudentsResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getCourses(const char *endpoint, const char *soap_action, std::string accesscode, std::string &return_)
{	struct soap *soap = this;
	struct ns1__getCourses soap_tmp_ns1__getCourses;
	struct ns1__getCoursesResponse *soap_tmp_ns1__getCoursesResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getCourses";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getCourses.accesscode = accesscode;
	soap_serializeheader(soap);
	soap_serialize_ns1__getCourses(soap, &soap_tmp_ns1__getCourses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getCourses(soap, &soap_tmp_ns1__getCourses, "ns1:getCourses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getCourses(soap, &soap_tmp_ns1__getCourses, "ns1:getCourses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getCoursesResponse = soap_get_ns1__getCoursesResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getCoursesResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getCoursesResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::delUser(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string officialDate, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__delUser soap_tmp_ns1__delUser;
	struct ns1__delUserResponse *soap_tmp_ns1__delUserResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delUser";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__delUser.accesscode = accesscode;
	soap_tmp_ns1__delUser.userIdentifier = userIdentifier;
	soap_tmp_ns1__delUser.officialDate = officialDate;
	soap_serializeheader(soap);
	soap_serialize_ns1__delUser(soap, &soap_tmp_ns1__delUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__delUser(soap, &soap_tmp_ns1__delUser, "ns1:delUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__delUser(soap, &soap_tmp_ns1__delUser, "ns1:delUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__delUserResponse = soap_get_ns1__delUserResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__delUserResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__delUserResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveUserParameter(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string paramName, std::string paramValue, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveUserParameter soap_tmp_ns1__saveUserParameter;
	struct ns1__saveUserParameterResponse *soap_tmp_ns1__saveUserParameterResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserParameter";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveUserParameter.accesscode = accesscode;
	soap_tmp_ns1__saveUserParameter.userIdentifier = userIdentifier;
	soap_tmp_ns1__saveUserParameter.paramName = paramName;
	soap_tmp_ns1__saveUserParameter.paramValue = paramValue;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveUserParameter(soap, &soap_tmp_ns1__saveUserParameter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveUserParameter(soap, &soap_tmp_ns1__saveUserParameter, "ns1:saveUserParameter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveUserParameter(soap, &soap_tmp_ns1__saveUserParameter, "ns1:saveUserParameter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveUserParameterResponse = soap_get_ns1__saveUserParameterResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveUserParameterResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveUserParameterResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getClassList(const char *endpoint, const char *soap_action, xsd__anyType *accesscode, std::string &return_)
{	struct soap *soap = this;
	struct ns1__getClassList soap_tmp_ns1__getClassList;
	struct ns1__getClassListResponse *soap_tmp_ns1__getClassListResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassList";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getClassList.accesscode = accesscode;
	soap_serializeheader(soap);
	soap_serialize_ns1__getClassList(soap, &soap_tmp_ns1__getClassList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getClassList(soap, &soap_tmp_ns1__getClassList, "ns1:getClassList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getClassList(soap, &soap_tmp_ns1__getClassList, "ns1:getClassList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getClassListResponse = soap_get_ns1__getClassListResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getClassListResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getClassListResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveClassList(const char *endpoint, const char *soap_action, std::string accesscode, std::string serializedList, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveClassList soap_tmp_ns1__saveClassList;
	struct ns1__saveClassListResponse *soap_tmp_ns1__saveClassListResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveClassList";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveClassList.accesscode = accesscode;
	soap_tmp_ns1__saveClassList.serializedList = serializedList;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveClassList(soap, &soap_tmp_ns1__saveClassList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveClassList(soap, &soap_tmp_ns1__saveClassList, "ns1:saveClassList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveClassList(soap, &soap_tmp_ns1__saveClassList, "ns1:saveClassList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveClassListResponse = soap_get_ns1__saveClassListResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveClassListResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveClassListResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::delClass(const char *endpoint, const char *soap_action, std::string accesscode, std::string code, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__delClass soap_tmp_ns1__delClass;
	struct ns1__delClassResponse *soap_tmp_ns1__delClassResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#delClass";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__delClass.accesscode = accesscode;
	soap_tmp_ns1__delClass.code = code;
	soap_serializeheader(soap);
	soap_serialize_ns1__delClass(soap, &soap_tmp_ns1__delClass);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__delClass(soap, &soap_tmp_ns1__delClass, "ns1:delClass", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__delClass(soap, &soap_tmp_ns1__delClass, "ns1:delClass", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__delClassResponse = soap_get_ns1__delClassResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__delClassResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__delClassResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveUserToClasses(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string csvList, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveUserToClasses soap_tmp_ns1__saveUserToClasses;
	struct ns1__saveUserToClassesResponse *soap_tmp_ns1__saveUserToClassesResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClasses";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveUserToClasses.accesscode = accesscode;
	soap_tmp_ns1__saveUserToClasses.userIdentifier = userIdentifier;
	soap_tmp_ns1__saveUserToClasses.csvList = csvList;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveUserToClasses(soap, &soap_tmp_ns1__saveUserToClasses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveUserToClasses(soap, &soap_tmp_ns1__saveUserToClasses, "ns1:saveUserToClasses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveUserToClasses(soap, &soap_tmp_ns1__saveUserToClasses, "ns1:saveUserToClasses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveUserToClassesResponse = soap_get_ns1__saveUserToClassesResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveUserToClassesResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveUserToClassesResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveUserToClass(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string class_, std::string officialDate, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveUserToClass soap_tmp_ns1__saveUserToClass;
	struct ns1__saveUserToClassResponse *soap_tmp_ns1__saveUserToClassResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClass";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveUserToClass.accesscode = accesscode;
	soap_tmp_ns1__saveUserToClass.userIdentifier = userIdentifier;
	soap_tmp_ns1__saveUserToClass.class_ = class_;
	soap_tmp_ns1__saveUserToClass.officialDate = officialDate;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveUserToClass(soap, &soap_tmp_ns1__saveUserToClass);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveUserToClass(soap, &soap_tmp_ns1__saveUserToClass, "ns1:saveUserToClass", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveUserToClass(soap, &soap_tmp_ns1__saveUserToClass, "ns1:saveUserToClass", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveUserToClassResponse = soap_get_ns1__saveUserToClassResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveUserToClassResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveUserToClassResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::saveUserToClassesAndGroups(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string csvList, int keepOld, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__saveUserToClassesAndGroups soap_tmp_ns1__saveUserToClassesAndGroups;
	struct ns1__saveUserToClassesAndGroupsResponse *soap_tmp_ns1__saveUserToClassesAndGroupsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#saveUserToClassesAndGroups";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveUserToClassesAndGroups.accesscode = accesscode;
	soap_tmp_ns1__saveUserToClassesAndGroups.userIdentifier = userIdentifier;
	soap_tmp_ns1__saveUserToClassesAndGroups.csvList = csvList;
	soap_tmp_ns1__saveUserToClassesAndGroups.keepOld = keepOld;
	soap_serializeheader(soap);
	soap_serialize_ns1__saveUserToClassesAndGroups(soap, &soap_tmp_ns1__saveUserToClassesAndGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveUserToClassesAndGroups(soap, &soap_tmp_ns1__saveUserToClassesAndGroups, "ns1:saveUserToClassesAndGroups", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveUserToClassesAndGroups(soap, &soap_tmp_ns1__saveUserToClassesAndGroups, "ns1:saveUserToClassesAndGroups", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__saveUserToClassesAndGroupsResponse = soap_get_ns1__saveUserToClassesAndGroupsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__saveUserToClassesAndGroupsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__saveUserToClassesAndGroupsResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::setAccountStatus(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, xsd__anyType *accountStatus, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__setAccountStatus soap_tmp_ns1__setAccountStatus;
	struct ns1__setAccountStatusResponse *soap_tmp_ns1__setAccountStatusResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountStatus";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__setAccountStatus.accesscode = accesscode;
	soap_tmp_ns1__setAccountStatus.userIdentifier = userIdentifier;
	soap_tmp_ns1__setAccountStatus.accountStatus = accountStatus;
	soap_serializeheader(soap);
	soap_serialize_ns1__setAccountStatus(soap, &soap_tmp_ns1__setAccountStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__setAccountStatus(soap, &soap_tmp_ns1__setAccountStatus, "ns1:setAccountStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__setAccountStatus(soap, &soap_tmp_ns1__setAccountStatus, "ns1:setAccountStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__setAccountStatusResponse = soap_get_ns1__setAccountStatusResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__setAccountStatusResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__setAccountStatusResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::setAccountPhoto(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string photo, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__setAccountPhoto soap_tmp_ns1__setAccountPhoto;
	struct ns1__setAccountPhotoResponse *soap_tmp_ns1__setAccountPhotoResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#setAccountPhoto";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__setAccountPhoto.accesscode = accesscode;
	soap_tmp_ns1__setAccountPhoto.userIdentifier = userIdentifier;
	soap_tmp_ns1__setAccountPhoto.photo = photo;
	soap_serializeheader(soap);
	soap_serialize_ns1__setAccountPhoto(soap, &soap_tmp_ns1__setAccountPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__setAccountPhoto(soap, &soap_tmp_ns1__setAccountPhoto, "ns1:setAccountPhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__setAccountPhoto(soap, &soap_tmp_ns1__setAccountPhoto, "ns1:setAccountPhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__setAccountPhotoResponse = soap_get_ns1__setAccountPhotoResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__setAccountPhotoResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__setAccountPhotoResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::replaceInum(const char *endpoint, const char *soap_action, std::string accesscode, std::string oldInum, std::string newInum, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__replaceInum soap_tmp_ns1__replaceInum;
	struct ns1__replaceInumResponse *soap_tmp_ns1__replaceInumResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#replaceInum";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__replaceInum.accesscode = accesscode;
	soap_tmp_ns1__replaceInum.oldInum = oldInum;
	soap_tmp_ns1__replaceInum.newInum = newInum;
	soap_serializeheader(soap);
	soap_serialize_ns1__replaceInum(soap, &soap_tmp_ns1__replaceInum);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__replaceInum(soap, &soap_tmp_ns1__replaceInum, "ns1:replaceInum", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__replaceInum(soap, &soap_tmp_ns1__replaceInum, "ns1:replaceInum", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__replaceInumResponse = soap_get_ns1__replaceInumResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__replaceInumResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__replaceInumResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::savePassword(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string password, int accountType, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__savePassword soap_tmp_ns1__savePassword;
	struct ns1__savePasswordResponse *soap_tmp_ns1__savePasswordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#savePassword";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__savePassword.accesscode = accesscode;
	soap_tmp_ns1__savePassword.userIdentifier = userIdentifier;
	soap_tmp_ns1__savePassword.password = password;
	soap_tmp_ns1__savePassword.accountType = accountType;
	soap_serializeheader(soap);
	soap_serialize_ns1__savePassword(soap, &soap_tmp_ns1__savePassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__savePassword(soap, &soap_tmp_ns1__savePassword, "ns1:savePassword", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__savePassword(soap, &soap_tmp_ns1__savePassword, "ns1:savePassword", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__savePasswordResponse = soap_get_ns1__savePasswordResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__savePasswordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__savePasswordResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::sendMsg(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string title, std::string body, std::string senderIdentifier, struct _Struct_1 attachments, int coaccount, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__sendMsg soap_tmp_ns1__sendMsg;
	struct ns1__sendMsgResponse *soap_tmp_ns1__sendMsgResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#sendMsg";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__sendMsg.accesscode = accesscode;
	soap_tmp_ns1__sendMsg.userIdentifier = userIdentifier;
	soap_tmp_ns1__sendMsg.title = title;
	soap_tmp_ns1__sendMsg.body = body;
	soap_tmp_ns1__sendMsg.senderIdentifier = senderIdentifier;
	soap_tmp_ns1__sendMsg.attachments = attachments;
	soap_tmp_ns1__sendMsg.coaccount = coaccount;
	soap_serializeheader(soap);
	soap_serialize_ns1__sendMsg(soap, &soap_tmp_ns1__sendMsg);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__sendMsg(soap, &soap_tmp_ns1__sendMsg, "ns1:sendMsg", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__sendMsg(soap, &soap_tmp_ns1__sendMsg, "ns1:sendMsg", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__sendMsgResponse = soap_get_ns1__sendMsgResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__sendMsgResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__sendMsgResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getSkoreClassTeacherCourseRelation(const char *endpoint, const char *soap_action, std::string accesscode, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__getSkoreClassTeacherCourseRelation soap_tmp_ns1__getSkoreClassTeacherCourseRelation;
	struct ns1__getSkoreClassTeacherCourseRelationResponse *soap_tmp_ns1__getSkoreClassTeacherCourseRelationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getSkoreClassTeacherCourseRelation";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getSkoreClassTeacherCourseRelation.accesscode = accesscode;
	soap_serializeheader(soap);
	soap_serialize_ns1__getSkoreClassTeacherCourseRelation(soap, &soap_tmp_ns1__getSkoreClassTeacherCourseRelation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getSkoreClassTeacherCourseRelation(soap, &soap_tmp_ns1__getSkoreClassTeacherCourseRelation, "ns1:getSkoreClassTeacherCourseRelation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getSkoreClassTeacherCourseRelation(soap, &soap_tmp_ns1__getSkoreClassTeacherCourseRelation, "ns1:getSkoreClassTeacherCourseRelation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getSkoreClassTeacherCourseRelationResponse = soap_get_ns1__getSkoreClassTeacherCourseRelationResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getSkoreClassTeacherCourseRelationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getSkoreClassTeacherCourseRelationResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::unregisterStudent(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string officialDate, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__unregisterStudent soap_tmp_ns1__unregisterStudent;
	struct ns1__unregisterStudentResponse *soap_tmp_ns1__unregisterStudentResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#unregisterStudent";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__unregisterStudent.accesscode = accesscode;
	soap_tmp_ns1__unregisterStudent.userIdentifier = userIdentifier;
	soap_tmp_ns1__unregisterStudent.officialDate = officialDate;
	soap_serializeheader(soap);
	soap_serialize_ns1__unregisterStudent(soap, &soap_tmp_ns1__unregisterStudent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__unregisterStudent(soap, &soap_tmp_ns1__unregisterStudent, "ns1:unregisterStudent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__unregisterStudent(soap, &soap_tmp_ns1__unregisterStudent, "ns1:unregisterStudent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__unregisterStudentResponse = soap_get_ns1__unregisterStudentResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__unregisterStudentResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__unregisterStudentResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getClassTeachers(const char *endpoint, const char *soap_action, std::string accesscode, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__getClassTeachers soap_tmp_ns1__getClassTeachers;
	struct ns1__getClassTeachersResponse *soap_tmp_ns1__getClassTeachersResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getClassTeachers";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getClassTeachers.accesscode = accesscode;
	soap_serializeheader(soap);
	soap_serialize_ns1__getClassTeachers(soap, &soap_tmp_ns1__getClassTeachers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getClassTeachers(soap, &soap_tmp_ns1__getClassTeachers, "ns1:getClassTeachers", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getClassTeachers(soap, &soap_tmp_ns1__getClassTeachers, "ns1:getClassTeachers", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getClassTeachersResponse = soap_get_ns1__getClassTeachersResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getClassTeachersResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getClassTeachersResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::isValidUserCredentials(const char *endpoint, const char *soap_action, std::string accesscode, std::string username, std::string password, xsd__anyType *&return_)
{	struct soap *soap = this;
	struct ns1__isValidUserCredentials soap_tmp_ns1__isValidUserCredentials;
	struct ns1__isValidUserCredentialsResponse *soap_tmp_ns1__isValidUserCredentialsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#isValidUserCredentials";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__isValidUserCredentials.accesscode = accesscode;
	soap_tmp_ns1__isValidUserCredentials.username = username;
	soap_tmp_ns1__isValidUserCredentials.password = password;
	soap_serializeheader(soap);
	soap_serialize_ns1__isValidUserCredentials(soap, &soap_tmp_ns1__isValidUserCredentials);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__isValidUserCredentials(soap, &soap_tmp_ns1__isValidUserCredentials, "ns1:isValidUserCredentials", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__isValidUserCredentials(soap, &soap_tmp_ns1__isValidUserCredentials, "ns1:isValidUserCredentials", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return_ = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__isValidUserCredentialsResponse = soap_get_ns1__isValidUserCredentialsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__isValidUserCredentialsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__isValidUserCredentialsResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::getAbsents(const char *endpoint, const char *soap_action, std::string accesscode, std::string userIdentifier, std::string schoolYear, std::string &return_)
{	struct soap *soap = this;
	struct ns1__getAbsents soap_tmp_ns1__getAbsents;
	struct ns1__getAbsentsResponse *soap_tmp_ns1__getAbsentsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#getAbsents";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getAbsents.accesscode = accesscode;
	soap_tmp_ns1__getAbsents.userIdentifier = userIdentifier;
	soap_tmp_ns1__getAbsents.schoolYear = schoolYear;
	soap_serializeheader(soap);
	soap_serialize_ns1__getAbsents(soap, &soap_tmp_ns1__getAbsents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getAbsents(soap, &soap_tmp_ns1__getAbsents, "ns1:getAbsents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getAbsents(soap, &soap_tmp_ns1__getAbsents, "ns1:getAbsents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getAbsentsResponse = soap_get_ns1__getAbsentsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__getAbsentsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__getAbsentsResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::send_returnErrorCodes(const char *endpoint, const char *soap_action)
{	struct soap *soap = this;
	struct ns1__returnErrorCodes soap_tmp_ns1__returnErrorCodes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnErrorCodes";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__returnErrorCodes(soap, &soap_tmp_ns1__returnErrorCodes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__returnErrorCodes(soap, &soap_tmp_ns1__returnErrorCodes, "ns1:returnErrorCodes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__returnErrorCodes(soap, &soap_tmp_ns1__returnErrorCodes, "ns1:returnErrorCodes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int V3BindingProxy::recv_returnErrorCodes(struct ns1__returnErrorCodes& tmp)
{	struct soap *soap = this;

	struct ns1__returnErrorCodes *_param_2 = &tmp;
	soap_default_ns1__returnErrorCodes(soap, _param_2);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns1__returnErrorCodes(soap, _param_2, "ns1:returnErrorCodes", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int V3BindingProxy::returnCsvErrorCodes(const char *endpoint, const char *soap_action, std::string &return_)
{	struct soap *soap = this;
	struct ns1__returnCsvErrorCodes soap_tmp_ns1__returnCsvErrorCodes;
	struct ns1__returnCsvErrorCodesResponse *soap_tmp_ns1__returnCsvErrorCodesResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnCsvErrorCodes";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__returnCsvErrorCodes(soap, &soap_tmp_ns1__returnCsvErrorCodes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__returnCsvErrorCodes(soap, &soap_tmp_ns1__returnCsvErrorCodes, "ns1:returnCsvErrorCodes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__returnCsvErrorCodes(soap, &soap_tmp_ns1__returnCsvErrorCodes, "ns1:returnCsvErrorCodes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__returnCsvErrorCodesResponse = soap_get_ns1__returnCsvErrorCodesResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__returnCsvErrorCodesResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__returnCsvErrorCodesResponse->return_;
	return soap_closesock(soap);
}

int V3BindingProxy::returnJsonErrorCodes(const char *endpoint, const char *soap_action, std::string &return_)
{	struct soap *soap = this;
	struct ns1__returnJsonErrorCodes soap_tmp_ns1__returnJsonErrorCodes;
	struct ns1__returnJsonErrorCodesResponse *soap_tmp_ns1__returnJsonErrorCodesResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3";
	if (soap_action == NULL)
		soap_action = "https://sanctamaria-aarschot.smartschool.be/Webservices/V3#returnJsonErrorCodes";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__returnJsonErrorCodes(soap, &soap_tmp_ns1__returnJsonErrorCodes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__returnJsonErrorCodes(soap, &soap_tmp_ns1__returnJsonErrorCodes, "ns1:returnJsonErrorCodes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__returnJsonErrorCodes(soap, &soap_tmp_ns1__returnJsonErrorCodes, "ns1:returnJsonErrorCodes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_)
		return soap_closesock(soap);
	soap_default_std__string(soap, &return_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__returnJsonErrorCodesResponse = soap_get_ns1__returnJsonErrorCodesResponse(soap, NULL, "", "");
	if (!soap_tmp_ns1__returnJsonErrorCodesResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_ = soap_tmp_ns1__returnJsonErrorCodesResponse->return_;
	return soap_closesock(soap);
}
/* End of client proxy code */
