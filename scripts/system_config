#!/bin/bash
. scripts/functions
. scripts/db_functions
. scripts/gui

# function to update /etc/hosts with all known hosts
updateHosts() {
  showQuestion "System Change Possible" \
    "Would you like to update /etc/hosts?"

  if [[ $? == 0 ]]
  then
    cp data/hosts /etc/hosts
    echo "127.0.1.1 $hostname" >> /etc/hosts
    for entry in $(sqlite3 $database "select name, ip from $dbname"); do
      arr=(${entry//|/ })
      if [ "$hostname" != "${arr[0]}" ]; then
        echo "${arr[1]} ${arr[0]}" >> /etc/hosts
      fi
    done;
  fi
}

# check sudoers file
sudoCheck() {
  touch /root/admintools/sudoers
  
  # load the variables
  . /root/admintools/sudoers
  
  exec 3>&1
  
  local VALUES=$(dialog --ok-label "Submit" \
            --backtitle " yvan's admin tools" \
            --title "Administrators" \
            --form "Add up to 5 admins" \
            15 50 0 \
            "Admin 1:" 1 1 "$admin1" 1 15 15 0 \
            "Admin 2:" 2 1 "$admin2" 2 15 15 0 \
            "Admin 3:" 3 1 "$admin3" 3 15 15 0 \
            "Admin 4:" 4 1 "$admin4" 4 15 15 0 \
	    "Admin 5:" 5 1 "$admin5" 5 15 15 0 \
  2>&1 1>&3)

  exec 3>&-
  
  if [ "$VALUES" != "" ]; then
    readarray -t v <<<"$VALUES"
    admin1=${v[0]}
    admin2=${v[1]}
    admin3=${v[2]}
    admin4=${v[3]}
    admin5=${v[4]}

    # store in file again
    # first var clears file
    declare -p admin1 > /root/admintools/sudoers
    for var in admin2 admin3 admin4 admin5; do
       declare -p $var >> /root/admintools/sudoers
    done
  fi

  // check sudoers
  if [ -n "$admin1" ]; then
    usermod -a -G sudo "$admin1"
  fi

  if [ -n "$admin2" ]; then
    usermod -a -G sudo "$admin2"
  fi

  if [ -n "$admin3" ]; then
    usermod -a -G sudo "$admin3"
  fi

  if [ -n "$admin4" ]; then
    usermod -a -G sudo "$admin4"
  fi

  if [ -n "$admin5" ]; then
    usermod -a -G sudo "$admin5"
  fi  
  
    
}

# basic variables for this server
basicVariables() {
  touch /root/admintools/config
  
  # load the variables
  . /root/admintools/config
  
  exec 3>&1
  
  local VALUES=$(dialog --ok-label "Submit" \
            --backtitle " yvan's admin tools" \
            --title "Basic Config" \
            --form "Please update these" \
            15 50 0 \
            "Hostname:"    1 1 "$hostname"   1 15 15 0 \
            "Domain:"      2 1 "$domainname" 2 10 30 0 \
            "Public IP:"   3 1 "$publicIP"   3 15 15 0 \
            "BackBone IP:" 4 1 "$backboneIP" 4 15 15 0 \
  2>&1 1>&3)

  exec 3>&-
  
  if [ "$VALUES" != "" ]; then
    readarray -t v <<<"$VALUES"
    hostname=${v[0]}
    domainname=${v[1]}
    publicIP=${v[2]}
    backboneIP=${v[3]}

    # store in file again
    # first var clears file
    declare -p hostname > /root/admintools/config
    for var in domainname publicIP backboneIP; do
       declare -p $var >> /root/admintools/config
    done
 
    #hostname check
    hostfile=$(</etc/hostname)
    if [ "$hostfile" != "$hostname" ]; then
      echo $hostname > /etc/hostname
    fi

    # update database if needed
    dbname=$(tr -dc 'a-z' <<< $domainname)
    db "create table if not exists $dbname (ID integer primary key, name text, ip text);"   
    if [ $(dbCount $dbname "name='$hostname'") == 0 ]; then
      db "insert into $dbname (name, ip) values ('$hostname','$backboneIP');"
    fi
    updateHosts
  fi
}

sysConfig() {
  
  basicVariables
}

