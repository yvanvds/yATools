#!/bin/bash
. scripts/functions

installDebianPackages() {
  for pkg in $(cat data/packagelist); do
    installPackage $pkg
  done
  waitForEnter
}

installScripts() {
    #check for localized ntp servers
    if grep "ubuntu.pool" /etc/ntp.conf > /dev/null
    then
       sed -i 's/ubuntu.pool/be.pool/' /etc/ntp.conf
       echo "Changed /etc/ntp.conf to use local servers."
       printChange "Time Server Configuration" "REPAIRED"
       service ntp reload
    else
       printSuccess "Time Server Configuration" "OK"
    fi

    # put network checker in place
    if [ scripts_to_install/checkNetwork -nt /sbin/checkNetwork ]; then
      cp -fr scripts_to_install/checkNetwork /sbin
      printChange "verifying network restarter" "INSTALLING"      
    else
      printSuccess "verifying network restarter" "OK"
    fi

    addCronJob "*/2 * * * *" "/sbin/checkNetwork"
    printSuccess "adding checkNetwork to cron" "OK"

    # add sudo files
    if [ scripts_to_install/wwwSudo -nt /etc/sudoers.d/wwwSudo ]; then
      cp -fr scripts_to_install/wwwSudo /etc/sudoers.d/wwwSudo
      printChanges "verifying apache sudo" "INSTALLING"
    else
      printSuccess "verifying apache sudo" "OK"
    fi

    waitForEnter
}


installWT() {
    #download from github
    if [ -f ../wt/INSTALL ]; then
      printSuccess  "verifying wt presence" "OK"
    else
      printChange "verifying wt presence" "DOWNLOADING"
      cd ..
      git clone git://github.com/kdeforche/wt.git
      cd yATools
    fi
    # check if wt is installed
    if [ -d /usr/local/include/Wt ]; then
      printSuccess "verifying wt installation" "OK"
    else
      printChange "verifying wt installation" "COMPILING"
      cd ../wt
      createDir build
      cd build
      cmake ../
      make
      make install
      cd ../../yATools
    fi
    waitForEnter
}

installBoost() {
    if [ -f /usr/include/boost/process.hpp ]; then
      printSuccess "checking for boost process" "OK"
    else
      cp -fr dependencies/boost_process/boost/* /usr/include/boost
      printChange "checking for boost process" "INSTALLING"
    fi
    waitForEnter
}

installAdmintools(){
  git pull
  cd libadmintools
  make CONF=Release build
  cp dist/Release/GNU-Linux-x86/liblibadmintools.so /usr/lib
  cd ..
  rm /var/log/admintools
  touch /var/log/admintools
  chown www-data:www-data /var/log/admintools
  printSuccess "admin lib is updated" "OK"
  waitForEnter
  
  cd admin
  make CONF=Release build
  cp dist/Release/GNU-Linux-x86/admin /sbin
  cd ..
  printSuccess "admin command is updated" "OK"
  waitForEnter

}

installYearbook() {
  git pull
  cd yearBook
  make CONF=Release build

  # create dirs if they don't exist
  createDir /var/www/apps
  createDir /var/www/apps/yearbook

  # remove files if they exist
  if [ -f /var/www/apps/yearbook/yearbook.wt ]; then
    rm /var/www/apps/yearbook/yearbook.wt
  fi
  cp dist/Release_fastcgi/GNU-Linux-x86/yearbook /var/www/apps/yearbook/yearbook.wt
  cd ../yearbookAdmin
  make CONF=Release build

  if [ -f /var/www/app/yearbook/yearbookAdmin.wt ]; then
    rm /var/www/apps/yearbook/yearbookAdmin.wt
  fi

  cp dist/Release/GNU-Linux-x86/yearbookadmin /var/www/apps/yearbook/yearbookAdmin.wt
  cp -fr yearbook_latex /var/www/apps/yearbook
  chown -R www-data:www-data /var/www/apps/yearbook
  service apache2 restart
  cd ..
  printSuccess "Yearbook app is updated" "OK"
  waitForEnter
}



verifyInstalledSoftware() {
  cmd=(dialog --separate-output --backtitle "yvan's admin tools" --checklist "Choose Actions:" 15 60 8)
  options=(1 "Verify Debian Packages" on
           2 "Verify Scripts" on
           3 "Verify WT installation" off
           4 "Verify Boost process" off
	   5 "Reinstall account admin tools" off
           6 "Reinstall Yearbook App" off)
  choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
  clear 
  for choice in $choices; do
    case $choice in
      1) installDebianPackages ;;
      2) installScripts ;;
      3) installWT ;;
      4) installBoost ;;
      5) installAdmintools ;;
      6) installYearbook ;;
   esac
  done
}



